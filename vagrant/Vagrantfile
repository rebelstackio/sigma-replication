# -*- mode: ruby -*-
# vi: set ft=ruby :

pgcom_ip = "192.168.157.10"
pgjunta_ip = "192.168.157.20"

$script = <<SCRIPT
echo I am provisioning...
SCRIPT

Vagrant.configure("2") do |config|

	config.vm.define "pgcom", autostart:true do |pgcom|
		pgcom.vm.box = "ubuntu/trusty64"
		pgcom.vm.hostname = "sig-rdbms-com"
		pgcom.vm.network "private_network", ip: pgcom_ip
		pgcom.vm.network "private_network", ip: "172.31.0.1"
		pgcom.vm.provision "shell", inline: $script
		pgcom.vm.provision :shell do |s|
			s.path = "pgbox/pgbox.bootstrap.sh"
			s.env = {
				"EXTIP" => pgcom_ip,
				"BUSIP" => "172.31.0.1",
				"FQDN" => "sig-rdbms-com.test",
				"TZ" => "UTC"
			}
		end
	end

	config.vm.define "pgjunta", autostart:true do |pgjunta|
		pgjunta.vm.box = "ubuntu/trusty64"
		pgjunta.vm.hostname = "sig-rdbms-junta"
		pgjunta.vm.network "private_network", ip: pgjunta_ip
		pgjunta.vm.network "private_network", ip: "172.31.0.2"
		pgjunta.vm.provision "shell", inline: $script
		pgjunta.vm.provision :shell do |s|
			s.path = "pgbox/pgbox.bootstrap.sh"
			s.env = {
				"EXTIP" => pgjunta_ip,
				"BUSIP" => "172.31.0.2",
				"FQDN"  => "sig-rdbms-junta.test",
				"TZ"    => "UTC"
			}
		end
	end

	config.vm.define "ansible", autostart:false do |ansible|
		ansible.vm.box = "ubuntu/trusty64"
		ansible.vm.hostname = "ansible.testing"
		ansible.vm.network "private_network", ip: "192.168.86.2"
		ansible.vm.provision "shell", inline: $script
		ansible.vm.synced_folder "../playbooks", "/home/vagrant/playbooks", create:true,
			:mount_options => ['dmode=775', 'fmode=777']
		ansible.vm.synced_folder "../demo", "/home/vagrant/demo", create:true,
			:mount_options => ['dmode=775', 'fmode=777']
		ansible.vm.provision :shell do |s|
			s.path = "ansible/ansible.bootstrap.sh"
			s.env = {
				"GUEST_IP"        => "192.168.86.2",
				"PGBOX_GUEST_IP"  => pgcom_ip,
				"PGBOX2_GUEST_IP" => pgjunta_ip,
				"PGBOX_FQDN"      => "sig-rdbms-com.test",
				"PGBOX2_FQDN"     => "sig-rdbms-junta.test",
			}
		end
	end

end
